name: Java CI with Maven and SonarCloud

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the code from the repository
    - uses: actions/checkout@v2

    # Step 2: Set up JDK 21
    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'adopt'

    # Step 3: Cache Maven dependencies
    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Step 4: Install SonarScanner
    - name: Install SonarScanner
      run: |
        curl -sSLo sonarqube-scanner.zip https://github.com/SonarSource/sonar-scanner-cli/releases/download/4.7.0.2747/sonar-scanner-cli-4.7.0.2747-linux.zip
        unzip sonar-scanner.zip
        sudo mv sonar-scanner-*/bin/sonar-scanner /usr/local/bin/

    # Step 5: Build with Maven
    - name: Build with Maven
      run: mvn clean install

    # Step 6: Run Unit Tests with Maven
    - name: Run Unit Tests
      run: mvn test

    # Step 7: Configure SonarQube properties
    - name: Configure SonarQube properties
      run: |
        echo "sonar.projectKey=my_project_key" >> sonar-project.properties
        echo "sonar.host.url=http://your-sonarqube-server" >> sonar-project.properties
        echo "sonar.login=${{ secrets.SONAR_TOKEN }}" >> sonar-project.properties

    # Step 8: Run SonarQube Scan
    - name: Run SonarQube Scan
      run: sonar-scanner -Dsonar.projectKey=my_project_key -Dsonar.sources=src
